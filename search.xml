<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>软考高级指南</title>
      <link href="/2025/05/19/%E8%BD%AF%E8%80%83%E9%AB%98%E7%BA%A7%E6%8C%87%E5%8D%97/"/>
      <url>/2025/05/19/%E8%BD%AF%E8%80%83%E9%AB%98%E7%BA%A7%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="🔥-在职高效备考系统架构设计师全攻略（含每日时间表-优先级策略）"><a href="#🔥-在职高效备考系统架构设计师全攻略（含每日时间表-优先级策略）" class="headerlink" title="🔥 在职高效备考系统架构设计师全攻略（含每日时间表+优先级策略）"></a>🔥 <strong>在职高效备考系统架构设计师全攻略</strong>（含每日时间表+优先级策略）</h2><h3 id="⏰-你的核心优势与挑战分析"><a href="#⏰-你的核心优势与挑战分析" class="headerlink" title="⏰ 你的核心优势与挑战分析"></a>⏰ <strong>你的核心优势与挑战分析</strong></h3><ul><li><strong>优势</strong>：Java开发经验（熟悉设计模式、架构基础）、双休日可集中冲刺  </li><li><strong>挑战</strong>：新生儿出生后时间碎片化、需兼顾工作与家庭  </li><li><strong>破局关键</strong>：<strong>精准抓重点 + 真题驱动 + 模板化应试技巧</strong></li></ul><hr><h3 id="📚-一、备考材料与工具包（按优先级排序）"><a href="#📚-一、备考材料与工具包（按优先级排序）" class="headerlink" title="📚 一、备考材料与工具包（按优先级排序）"></a>📚 <strong>一、备考材料与工具包（按优先级排序）</strong></h3><table><thead><tr><th>类型</th><th>推荐资源</th><th>用途说明</th></tr></thead><tbody><tr><td><strong>核心材料</strong></td><td>《系统架构设计师考试大纲（最新版）》</td><td>明确考试范围，打印贴在书桌前</td></tr><tr><td></td><td>近5年真题（2019-2023）及答案解析</td><td><strong>每天必用！</strong> 优先从<a href="https://www.ruankao.org.cn/">软考官网</a>下载</td></tr><tr><td><strong>辅助工具</strong></td><td>希赛&#x2F;环球网校视频课（选1个，约300元）</td><td>利用碎片时间听重点章节（1.5倍速）</td></tr><tr><td></td><td><a href="https://www.processon.com/">ProcessOn</a></td><td>画架构图&#x2F;UML图（论文素材积累）</td></tr><tr><td></td><td>Anki记忆卡</td><td>高频考点背诵（如CAP定理、设计模式）</td></tr><tr><td><strong>应急包</strong></td><td>《系统架构设计师5天修炼》</td><td>考前突击神器，重点提炼版</td></tr></tbody></table><hr><h3 id="📅-二、分阶段备考计划（总周期8周）"><a href="#📅-二、分阶段备考计划（总周期8周）" class="headerlink" title="📅 二、分阶段备考计划（总周期8周）"></a>📅 <strong>二、分阶段备考计划（总周期8周）</strong></h3><h4 id="阶段1：摸底定位（第1周）"><a href="#阶段1：摸底定位（第1周）" class="headerlink" title="阶段1：摸底定位（第1周）"></a><strong>阶段1：摸底定位（第1周）</strong></h4><ul><li><strong>目标</strong>：明确强弱项，制定针对性策略  </li><li><strong>每日投入</strong>：工作日1h，周末2h  </li><li><strong>具体动作</strong>：  <ol><li><strong>做1套完整真题（2023年）</strong>，严格计时，记录各模块得分  </li><li><strong>分析错题分布</strong>：  <ul><li>综合知识：计算机组成原理&#x2F;数据库&#x2F;网络等基础课短板  </li><li>案例分析：系统建模&#x2F;性能优化等题型弱点  </li><li>论文：是否缺乏实际项目素材</li></ul></li><li><strong>制定个人优先级表</strong>（示例）：  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 高优先级：案例分析（系统建模）、论文（微服务架构）  </span><br><span class="line"><span class="bullet">-</span> 中优先级：综合知识（新兴技术、安全设计）  </span><br><span class="line"><span class="bullet">-</span> 低优先级：操作系统原理（已掌握进程调度）  </span><br></pre></td></tr></table></figure></li></ol></li></ul><h4 id="阶段2：专项突破（第2-5周）"><a href="#阶段2：专项突破（第2-5周）" class="headerlink" title="阶段2：专项突破（第2-5周）"></a><strong>阶段2：专项突破（第2-5周）</strong></h4><ul><li><p><strong>每日时间分配表</strong>（兼顾工作与家庭）：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">早7:00-7:30   通勤听视频课（综合知识难点）  </span><br><span class="line">午12:30-13:00 刷Anki卡片（高频考点）  </span><br><span class="line">晚20:30-21:30 集中学习（真题/论文）  </span><br><span class="line">周末上午9-11点 全真模拟考试  </span><br></pre></td></tr></table></figure></li><li><p><strong>各科目策略</strong>：<br><strong>1. 综合知识</strong>（保底50分）：  </p><ul><li><strong>重点突破</strong>：系统架构设计（20%）、数据库（10%）、安全设计（10%）  </li><li><strong>技巧</strong>：  <ul><li>直接刷真题，错题用Anki记录（示例卡：<code>CAP定理中，AP系统如何保证最终一致性？</code>）  </li><li><strong>必背清单</strong>：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设计模式对照表</span></span><br><span class="line">单例模式 → Spring Bean默认作用域  </span><br><span class="line">观察者模式 → Java EventListener  </span><br><span class="line">策略模式 → 支付渠道选择实现  </span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>2. 案例分析</strong>（保底45分）：  </p><ul><li><strong>高频题型解法</strong>：  <ul><li><p><strong>系统建模题</strong>：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 确定用例边界（用&lt;<span class="language-xml"><span class="tag">&lt;<span class="name">include</span>&gt;</span></span>&gt;/&lt;<span class="language-xml"><span class="tag">&lt;<span class="name">extend</span>&gt;</span></span>&gt;）  </span><br><span class="line"><span class="bullet">2.</span> 类图重点画聚合/组合关系（用菱形箭头）  </span><br><span class="line"><span class="bullet">3.</span> 状态图标注事件触发条件  </span><br></pre></td></tr></table></figure></li><li><p><strong>架构设计题</strong>：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">答题模板：  </span><br><span class="line"><span class="bullet">-</span> 问题痛点（如单点故障）  </span><br><span class="line"><span class="bullet">-</span> 选型对比（微服务 vs SOA）  </span><br><span class="line"><span class="bullet">-</span> 具体方案（Nginx+SpringCloud）  </span><br><span class="line"><span class="bullet">-</span> 验证指标（吞吐量提升X%）  </span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>3. 论文</strong>（保底48分）：  </p><ul><li><p><strong>快速成文模板</strong>：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 标题：基于XXX技术的YYY系统架构设计  </span></span><br><span class="line"></span><br><span class="line"><span class="section">### 1. 项目背景与问题  </span></span><br><span class="line"><span class="bullet">-</span> 场景：电商促销秒杀系统（用户量100万+）  </span><br><span class="line"><span class="bullet">-</span> 痛点：数据库扛不住高并发、库存超卖  </span><br><span class="line"></span><br><span class="line"><span class="section">### 2. 架构设计  </span></span><br><span class="line"><span class="bullet">-</span> 分层设计：接入层（Nginx+OpenResty）→ 服务层（SpringCloud）→ 数据层（Redis+MySQL分库）  </span><br><span class="line"><span class="bullet">-</span> 技术选型：RabbitMQ异步削峰、Sentinel限流  </span><br><span class="line"></span><br><span class="line"><span class="section">### 3. 实施效果  </span></span><br><span class="line"><span class="bullet">-</span> QPS从500提升至5000  </span><br><span class="line"><span class="bullet">-</span> 0超卖事故  </span><br></pre></td></tr></table></figure></li><li><p><strong>素材积累</strong>：  </p><ul><li>结合你参与的Java项目，虚构一个高并发&#x2F;分布式场景（如支付系统、风控系统）  </li><li>准备3个不同方向的案例（微服务、安全、性能优化）</li></ul></li></ul></li></ul><h4 id="阶段3：冲刺模拟（第6-8周）"><a href="#阶段3：冲刺模拟（第6-8周）" class="headerlink" title="阶段3：冲刺模拟（第6-8周）"></a><strong>阶段3：冲刺模拟（第6-8周）</strong></h4><ul><li><strong>动作</strong>：  <ol><li>每周末全真模拟（09:00-16:00连续考3科）  </li><li>论文限时写作训练（2小时内完成2000字）  </li><li>重点复习错题本和Anki卡片</li></ol></li><li><strong>考前3天</strong>：  <ul><li>背诵论文开头&#x2F;结尾模板  </li><li>默写10个高频考点（如Redis缓存雪崩解决方案）</li></ul></li></ul><hr><h3 id="🎯-三、各模块重点与偷分技巧"><a href="#🎯-三、各模块重点与偷分技巧" class="headerlink" title="🎯 三、各模块重点与偷分技巧"></a>🎯 <strong>三、各模块重点与偷分技巧</strong></h3><h4 id="综合知识（选择题）"><a href="#综合知识（选择题）" class="headerlink" title="综合知识（选择题）"></a><strong>综合知识（选择题）</strong></h4><ul><li><strong>必拿分点</strong>：  <ul><li>架构风格：微服务特点（独立部署、轻量通信）  </li><li>设计模式：工厂模式 vs 抽象工厂模式  </li><li>安全设计：JWT组成（Header.Payload.Signature）</li></ul></li><li><strong>蒙题技巧</strong>：  <ul><li>出现“绝对化”词汇（必须、所有）→ 通常错误  </li><li>新兴技术选最新标准（如HTTP&#x2F;3基于QUIC协议）</li></ul></li></ul><h4 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a><strong>案例分析</strong></h4><ul><li><strong>答题公式</strong>：  <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">问题定位 → 技术原理 → 解决方案 → 验证指标  </span><br><span class="line">示例：  </span><br><span class="line">Q：如何解决数据库查询慢？  </span><br><span class="line">A：  </span><br><span class="line"><span class="bullet">1.</span> 定位慢SQL（Explain分析）  </span><br><span class="line"><span class="bullet">2.</span> 添加索引（B+树原理）  </span><br><span class="line"><span class="bullet">3.</span> 结果：查询时间从2s降至200ms  </span><br></pre></td></tr></table></figure></li></ul><h4 id="论文"><a href="#论文" class="headerlink" title="论文"></a><strong>论文</strong></h4><ul><li><strong>加分细节</strong>：  <ul><li>画1-2张架构图（用ProcessOn绘制后贴图）  </li><li>引用名人名言（如Martin Fowler谈微服务）  </li><li>强调“踩坑”与反思（如最初没做熔断导致雪崩）</li></ul></li></ul><hr><h3 id="⚠️-四、避坑指南（血泪经验）"><a href="#⚠️-四、避坑指南（血泪经验）" class="headerlink" title="⚠️ 四、避坑指南（血泪经验）"></a>⚠️ <strong>四、避坑指南（血泪经验）</strong></h3><ol><li><strong>别啃教材</strong>：直接真题驱动，遇到陌生知识点再查资料  </li><li><strong>论文不要临场发挥</strong>：提前准备好3篇模板，考场上改头换面  </li><li><strong>案例分析分点作答</strong>：用“①、②、③”编号，方便阅卷老师找得分点  </li><li><strong>利用产假时间</strong>：新生儿出生后，可申请假期集中冲刺（如有哺乳假）</li></ol><hr><h3 id="📌-五、最终冲刺计划表（考前1周）"><a href="#📌-五、最终冲刺计划表（考前1周）" class="headerlink" title="📌 五、最终冲刺计划表（考前1周）"></a>📌 <strong>五、最终冲刺计划表（考前1周）</strong></h3><table><thead><tr><th>时间</th><th>任务</th></tr></thead><tbody><tr><td>周一-周三</td><td>重做2021-2023年真题，严格计时</td></tr><tr><td>周四</td><td>整理高频错题（用Excel分类统计错误率）</td></tr><tr><td>周五</td><td>默写论文模板 + 画架构图</td></tr><tr><td>周六</td><td>模拟考试（完全模拟考场环境）</td></tr><tr><td>周日</td><td>放松，检查准考证&#x2F;文具，复习Anki卡片</td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> 指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统架构设计师 </tag>
            
            <tag> 软考高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/2025/05/18/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2025/05/18/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>以下是基于 GitHub Pages + Hexo + Next 主题搭建个人博客的完整教程，包含你需求的功能及扩展推荐：</p><hr><p>一、基础环境搭建</p><ol><li><p>安装依赖<br>• Node.js（v16+）：<a href="https://nodejs.org/">官网下载</a>  </p><p>• Git：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">阿里镜像下载</a>  </p><p>• 验证安装：  </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v &amp;&amp; git --version</span><br></pre></td></tr></table></figure></li><li><p>Hexo 初始化  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init myblog</span><br><span class="line"><span class="built_in">cd</span> myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>• 本地预览：<code>hexo s</code> → 访问 <code>http://localhost:4000</code></p></li><li><p>部署到 GitHub Pages<br>• 创建仓库 <code>用户名.github.io</code>，开启 GitHub Pages 功能  </p><p>• 安装部署插件：  </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>• 修改 <code>_config.yml</code> 部署配置：  </p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>• 部署命令：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p></li></ol><hr><p>二、Next 主题配置</p><ol><li><p>安装主题  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>• 修改 <code>_config.yml</code> 启用主题：  </p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure></li><li><p>基础设置<br>• 主题风格：修改 <code>themes/next/_config.yml</code> 中的 <code>scheme</code>（推荐 <code>Muse</code> 或 <code>Gemini</code>）  </p><p>• 网站信息：配置标题、作者、语言等  </p><p>• 菜单栏：启用分类、标签、归档等模块</p></li></ol><hr><p>三、核心功能实现</p><ol><li>Markdown 展示优化<br>• 分页功能</li></ol><p>  安装插件并配置每页显示文章数：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br></pre></td></tr></table></figure><br>  修改 <code>_config.yml</code>：<br>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span>  <span class="comment"># 首页分页数</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure></p><p>• 标签与分类  </p><p>  • 生成标签页：  </p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>编辑 `source/tags/index.md` 添加 `type: &quot;tags&quot;`  </code></pre><p>  • 分类同理，编辑 <code>source/categories/index.md</code>  </p><p>  • 文章添加标签&#x2F;分类：  </p><pre><code><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">tags: [Hexo, 教程]</span><br><span class="line"><span class="section">categories: [技术文档]</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure></code></pre><p>• 浏览统计  </p><p>  使用不蒜子插件，在主题配置文件中启用：<br>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure></p><hr><ol start="2"><li>GitHub 跳转引导<br>• 右上角添加 GitHub 图标</li></ol><p>  编辑 <code>themes/next/layout/_layout.swig</code>，在 <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code> 下方插入：<br>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/你的用户名&quot;</span> <span class="attr">class</span>=<span class="string">&quot;github-corner&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- SVG 图标代码（参考 GitHub Corners 官网） --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br>  支持新标签页打开和悬停动效。</p><hr><p>四、扩展功能推荐</p><ol><li><p>SEO 优化<br>• 安装 <code>hexo-generator-sitemap</code> 生成站点地图  </p><p>• 在 Google Search Console 提交 sitemap  </p></li><li><p>代码高亮与复制<br>修改主题配置启用代码块行号显示和复制按钮：  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">bright</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>图片懒加载<br>Next 主题内置支持：  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li><li><p>文章置顶功能  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>在文章 Front-matter 中添加 <code>top: true</code></p></li></ol><hr><p>五、注意事项<br>• 本地与线上差异：本地预览时访问量统计会异常（因不蒜子共用统计池），部署后自动恢复  </p><p>• HTTPS 强制启用：在 GitHub Pages 设置中勾选 <code>Enforce HTTPS</code>  </p><p>• 自定义域名：在 <code>source</code> 目录创建 <code>CNAME</code> 文件（无后缀）写入域名，并配置 DNS 解析</p><p>通过以上配置，你可以获得一个支持分页、标签、分类、统计、跳转引导且 SEO 友好的现代化博客系统。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> GitHub Pages </tag>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 10大类算法归纳</title>
      <link href="/2025/05/17/Java%2010%E5%A4%A7%E7%B1%BB%E7%AE%97%E6%B3%95%E5%BD%92%E7%BA%B3/"/>
      <url>/2025/05/17/Java%2010%E5%A4%A7%E7%B1%BB%E7%AE%97%E6%B3%95%E5%BD%92%E7%BA%B3/</url>
      
        <content type="html"><![CDATA[<p>一、排序算法（核心类别）</p><ol><li><p>快速排序<br>• 原理：分治法思想，选取基准值将数组分割成子序列递归排序  </p><p>• 时间复杂度：平均O(n log n)，最坏O(n²)  </p><p>• 代码示例（网页1）：  </p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">quickSort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pivotIndex</span> <span class="operator">=</span> partition(arr, left, right);</span><br><span class="line">        quickSort(arr, left, pivotIndex - <span class="number">1</span>);</span><br><span class="line">        quickSort(arr, pivotIndex + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>• 应用场景：大规模无序数据集（网页1、4、8）</p></li><li><p>归并排序<br>• 特点：稳定排序，时间复杂度O(n log n)  </p><p>• 适用场景：链表排序、外部排序（网页2、5）</p></li></ol><hr><p>二、查找算法</p><ol><li><p>二分查找<br>• 前提条件：有序数组  </p><p>• 代码示例（网页3）：  </p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (arr[mid] == key) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; key) left = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> right = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>• 优化方向：插值查找（网页3、6）</p></li></ol><hr><p>三、图论算法</p><ol><li><p>Dijkstra最短路径<br>• 原理：贪心策略，使用优先队列优化  </p><p>• 应用场景：导航系统、网络路由（网页4、7）</p></li><li><p>深度优先搜索（DFS）<br>• 代码特征：递归或栈实现  </p><p>• 典型应用：迷宫求解、拓扑排序（网页1、7）</p></li></ol><hr><p>四、动态规划（DP）</p><ol><li><p>背包问题<br>• 核心方程：<code>dp[i][j] = max(dp[i-1][j], dp[i-1][j-w]+v)</code>  </p><p>• 变种类型：0-1背包、完全背包（网页4、5）</p></li><li><p>最长公共子序列（LCS）<br>• 应用领域：DNA序列比对、文本差异分析（网页4、8）</p></li></ol><hr><p>五、字符串匹配</p><ol><li><p>KMP算法<br>• 核心思想：部分匹配表跳过无效比较  </p><p>• 时间复杂度：O(n+m)（网页4、5）</p></li><li><p>Boyer-Moore算法<br>• 优势：坏字符规则和好后缀规则结合  </p><p>• 适用场景：大文本搜索（网页5、7）</p></li></ol><hr><p>六、分治算法</p><ol><li>快速排序（见第一类）  </li><li>归并排序（见第一类）  </li><li>Strassen矩阵乘法<br>• 突破点：将矩阵乘法复杂度从O(n³)降至O(n².81)（网页4、8）</li></ol><hr><p>七、贪心算法</p><ol><li><p>Prim最小生成树<br>• 实现方式：优先队列维护候选边集合  </p><p>• 对比算法：Kruskal算法（网页5、7）</p></li><li><p>霍夫曼编码<br>• 应用场景：数据压缩、文件编码（网页4、8）</p></li></ol><hr><p>八、树相关算法</p><ol><li><p>AVL树平衡调整<br>• 旋转类型：左旋、右旋、左右旋、右左旋（网页6、8）</p></li><li><p>红黑树插入删除<br>• 特性维护：颜色翻转与节点旋转组合操作（网页6、8）</p></li></ol><hr><p>九、数学算法</p><ol><li><p>欧几里得算法<br>• 代码实现：递归求最大公约数（网页4、5）  </p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>素数筛法<br>• 优化方案：埃拉托斯特尼筛法、欧拉筛法（网页5、7）</p></li></ol><hr><p>十、并发与优化算法</p><ol><li><p>CAS（Compare-And-Swap）<br>• 硬件支持：Java原子类底层实现原理（网页4、6）</p></li><li><p>LRU缓存淘汰<br>• 数据结构：哈希表+双向链表实现O(1)操作（网页6、8）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
